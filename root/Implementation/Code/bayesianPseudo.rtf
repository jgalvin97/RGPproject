{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12080\viewh18000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 declare lightValue;\
declare totalProbability;\
declare and initialise arrayOfProbabilities;\
\
for(item in arrayOfProbabilities) \{\
\
	each item in arrayOfProbabilities -> 1/size of arrayOfProbabilities;\
\
\}\
\
while(true) \{\
\
	lightValue -> reading from sensor;\
\
	/*UPDATE*/\
\
	for(item in arrayOfProbabilities) \{\
\
		if(lightValue == arrayOfProbabilities at index item) \{\
			item in arrayOfProbabilties = probSensorWorks * item in arrayProbabilities;\
		\}\
\
		else \{\
			item in arrayOfProbabilities = 1-probSensorWorks * item in arrayOfProbabilities;\
		\}\
\
	\}\
\
	/*SUM*/\
	totalProb -> 0;\
	for(item in arrayOfProbabilties) \{\
		add to totalProbability by each value at index item in arrayOfProbabilities;\
	\}\
\
	/*NORMALISE*/\
	for(item in arrayOfProbabilities) \{\
		item in arrayOfProbabilities = item in arrayOfProbabilities/totalProbability; \
	\}\
\
	moveForward(given distance);\
\
	/*UPDATE*/\
	for(index, decrement from back of arrayOfProbabilties) \{\
		if(index == 0) \{\
			index of arrayOfProbabilties = index of arrayOfProbabilties * (1-probMotorWorks);\
		\}\
		else \{\
			index of arrayOfProbabilities = index of arrayOfProbabilties * (1-probMotorWorks) + index -1 			of arrayOfProbabilties * probMotorWorks;\
		\}\
	\}\
\
	/*SUM*/\
	totalProbability -> sum the total probabilities;\
\
	/*NORMALISE*/\
\
	divide every item in arrayOfProbabilities by totalProbability;\
\
	maxValue -> 0;\
	maxInd -> 0;\
\
	for(each item in arrayOfProbabilities) \{\
		if(item > maxValue) \{\
			maxValue -> item;\
			maxInd -> index of item;\
		\}\
	\}\
\
	if(maxValue > 0.75) \{\
		stop motors;\
		return maxInd*2.0;\
	\}\
\
\}\
\
\}\
\
\
}